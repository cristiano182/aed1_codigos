#include <stdio.h>
#include <stdlib.h>

typedef struct Elemento
{
    int cidadeID;
    int distancia;

    struct Elemento *prox;
    struct Elemento *ant;

}elemento;

typedef struct lista
{
    elemento *primeiro;
    elemento *ultimo;
    int tamanhoLista;

}Lista;

void inicialiaLista(Lista *lista)
{
    lista->primeiro = NULL;
    lista->ultimo = NULL;
    lista->tamanhoLista  = 0 ;

}

void quantoPercorri(Lista *lista)
{
    int cidade;
    int km = 0;
    int i=0;
    elemento *aux = lista->primeiro;

    scanf("%d",&cidade);

    while(aux != NULL)
    {
    km = km +  aux->distancia;
    i++;
    if(aux->cidadeID == cidade)
    break;
    aux = aux->prox;
    }


    if(aux == NULL)
    {
        printf("cidade nao existe");
    }
    else
    {
    printf("estou na cidade %d:\n",cidade);
    printf("ja percorri %d km, passando por %d cidades\n",km,i);
    }


}

void quantoFalta(Lista *lista)
{
        int cidade;
        int km = 0;
        int i = 0;

        elemento *aux = lista->ultimo;
        scanf("%d",&cidade);


    while(aux != NULL )
    {
    km = km + aux->distancia;
    i++;
    if(aux->cidadeID == cidade)
    break;
        aux = aux->ant;
    }
    if(aux == NULL)
    {
        printf("cidade nao existe");
    }
    else
    {
    printf("estou na cidade %d:\n",x);
    printf("faltam percorrer %d km,passando por %d cidades\n",i);

    }

}
void totalTrajeto (Lista *lista)
{
    int km = 0;
    int i = 0;

    elemento *aux = lista->primeiro;

        while(aux != NULL)
        {

        km = km + aux->distancia;
        i++;
        aux = aux->prox;
        }
        printf("o trajeto total tem %d kms,passsando por %d cidades\n",km,i);
}
void inserir(Lista *lista, int IDcidade, int distancia)
{

elemento *novo = (elemento*)malloc(sizeof(elemento));
novo->cidadeID = IDcidade;
novo->distancia = distancia;

if(lista->tamanhoLista == 0)
{

novo->ant = NULL;
novo->prox = NULL;

lista->primeiro = novo;
lista->ultimo = novo;
}
else
{

novo->prox = NULL;
novo->ant = lista->ultimo;
lista->ultimo->prox = novo;
lista->ultimo = novo;

}
lista->tamanhoLista++;


}

int main ()
{
    int op;
    int IDcidade,distancia;
    Lista lista;
    inicialiaLista(&lista);


scanf("%d",&op);
while(op == 1)
{
scanf("%d %d",&IDcidade,&distancia);
 inserir(&lista,IDcidade,distancia);
 scanf("%d",&op);
}

    switch(op)
    {
    case 2:
        if(distancia == 0)
        quantoPercorri(&lista);
        else
        printf("trajeto invalido");
        break;

    case 3:
        if(distancia == 0)
        quantoFalta(&lista);
        else
        printf("trajeto invalido");
        break;

    case 4:
       if(distancia == 0)
       totalTrajeto(&lista);
       else
        printf("trajeto invalido");
        break;

    default:
        printf("opcao invalida");
        break;
    }


    return 0;
}
